#!/bin/sh
#
# Backup Files
#
# (C) 2013 Stefan Schallenberg
#

##### backup2_imap ###########################################################
# Interface to type_specific drivers:
#	backup2_<type>	function name
#	bck_src		Source URL
#	bck_dst		Destination URL
#	bck_src_secret	Source Secret Filename
#	bck_dst_secret	Destination Secret Filename
#	[ ...]		type specific futher options
function backup2_imap {
        if [ "$#" -ne 5 ] ; then
                printf "Error in custom config script. "
                printf "Calling backup imap with parms:\n\t%s\n" "$*"
                return 1
	elif [ x"$DEBUG" == x1 ] ; then
		printf "DEBUG: %s %s\n" "$FUNCNAME" "$*"
	fi

	local bckimap_src="$1"
	local bckimap_dst="$2"
	local bckimap_src_secret="$3"
	local bckimap_dst_secret="$4"
	local bckimap_srv="$5"

	local emailuser bckimapo_srv_server bckimap_srv_port
	emailuser="${bckimap_src%%@*}" &&
	# convert to lowercase
	emailuser="${emailuser,,}" &&
	bckimap_srv_server="${bckimap_srv%%:*}" &&
	bckimap_srv_port=${bckimap_srv:$((${#bckimap_srv_server} + 1))} &&
	/usr/bin/true || return 1

	if [ -z "$bckimap_srv_port" ] ; then
		printf "Error: IMAP Port not specified in URL %s.\n" \
			"bckimap_srv"
		return 1
	fi

	local ssl=""
	if [ "$bckimap_srv_port" == "143" ] ; then
		ssl=$'ssl = no\nstarttls = yes'
	else
		ssl=$'ssl = yes'
	fi

	if [ ! -d "$bckimap_dst" ] ; then
		mkdir -p "$bckimap_dst" || return 1
	fi

	offlineimap -c /dev/fd/10 10<<-EOFCFG  || return 1
		# OfflineIMAP configuration
		#
		# (C) 2012-2015 Stefan Schallenberg
		# Generated by ${BASH_SOURCE##*/}

		[general]
		accounts = $emailuser
		metadata = $bckimap_dst/.offlineimap

		[Account $emailuser]
		localrepository = ${emailuser}Local
		remoterepository = ${emailuser}Remote

		[Repository ${emailuser}Local]
		type = Maildir
		localfolders = $bckimap_dst

		[Repository ${emailuser}Remote]
		type = IMAP
		readonly = True
		remotehost = $bckimap_srv_server
		remoteport = $bckimap_srv_port
		remoteuser = $bckimap_src
		remotepassfile = $bckimap_src_secret
		subscribedonly = no

		$ssl
		EOFCFG

	return 0
}


#!/bin/bash
#
# Backup in Docker container
#
# (C) 2017 Stefan Schallenberg
#
# Test script

##### Test Init ##############################################################
# Initialise tests including any necessary workaround
function test_init {

	if which "ip" >/dev/null ; then
		my_ip="$USER@$(set -o pipefail
			ip -4 -j a show dev docker0 primary |
			jq '.[].addr_info[0].local')" &&
		my_ip=${my_ip//\"} \
		|| return 1
	elif which "ipconfig" >/dev/null ; then
		my_ip="$USER@$(ipconfig getifaddr en0 en1)" &&
		test ! -z "$my_ip" \
		|| return 1
	else
		my_ip=""
	fi

	if [[ "$OSTYPE" =~ darwin* ]] ; then
		printf "Activate MacOS workaround - using /usr/local/bin/rsync\n"
		rsync_opt="--rsync-path=/usr/local/bin/rsync"
	else
		rsync_opt=""
	fi

	return 0
}

##### Test Executer ##########################################################
# Parameters:
#     1 - command in custom backup shell
#     2 - expected RC [default: 0]
function test_exec_backupdocker {
	if [ "$#" -lt 1 ] ; then
		printf "Internal Error in %s - git %s parms (exp 1+)\n" \
			"$FUNCNAME" "$#"
		return 1
	fi
	rc_exp="$1"
	shift

	cat >$TESTSETDIR/backup/backup <<<"$@" &&
	chmod +x $TESTSETDIR/backup/backup <<<"$@" || return 100

	local docker_cmd=""
	docker_cmd+="docker run"
	docker_cmd+=" -v $TESTSETDIR/backup:/backup"
	docker_cmd+=" -v ~/.ssh/id_rsa:/secrets/id_rsa"
	docker_cmd+=" -e DEBUG=1"
	docker_cmd+=" nafets227/backup:test"
	docker_cmd+=" . /backup/backup"

	printf "test_exec_simple \"%s\" \"%s\" \"%s\"" \
		"$docker_cmd" \
		"$rc_exp" \
		"Backup Command $*"

	return $TESTRC
}

##### Test Build #############################################################
function test_build {

	# Compile / Build docker
	test_exec_simple \
		"docker build -t nafets227/backup:test $BASEDIR/.." \
		0

	[ $TESTRC -eq 0 ] || return 1

	return 0
}

##### Test: no custom script #################################################
function test_runempty {
	test_exec_simple \
		"docker run nafets227/backup:test" \
		1
	
	return $?
}

##### Test x: remaining tests ################################################
function testx {
	mkdir $TESTSETDIR/test2
	cat >$TESTSETDIR/test2/backup <<-"EOF"
 		backup_imap "test-backup@nafets.dyndns.eu" "backup"

		backup_mysql "vSrv.dom.nafets.de" "dbFinance"
		backup_mysql_kube
 	
 		backup_rsync --hist "xen.intranet.nafets.de:/etc/libvirt" "/srv/backup/libvirt"
		backup_rsync "xen.intranet.nafets.de:/etc/libvirt" "/srv/backup/data.uncrypt/libvirt"

		backup_samba_domain "vDom.dom.nafets.de"
		backup_samba_conf "vDom.dom.nafets.de"
	
		EOF
 	
	docker run nafets227/backup:test -v $TESTSETDIR/test1/_backup:/backup/backup
	[ $? -eq 0 ] || return 1
	
	return 0
}

##### Main ###################################################################
BASEDIR=$(dirname $BASH_SOURCE)
. $BASEDIR/../util/test-functions.sh || exit 1
for f in $BASEDIR/*.sh ; do
	. $f || exit 1
done

testset_init || exit 1
if [ ! -d $TESTSETDIR/backup ] ; then
	mkdir $TESTSETDIR/backup || return 1
fi

if test_build && test_init ; then
	test_runempty
	test_file
	test_file_hist
	test_imap
	test_imap_hist
fi

testset_summary
exit $?
